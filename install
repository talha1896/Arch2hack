#!/bin/bash
clear

# color code
L=$(tput bold)
R=$(tput setaf 1)
G=$(tput setaf 2)
B=$(tput setaf 33)
N=$(tput sgr0)

# check is distribution is arch based
file="/etc/os-release"
   if  grep -q "Arch\|Garuda\|Manjaro\|Endeavours" $file ; then
  echo -e "${B}${L} [+] Arch${N} Linux found"
else
    echo -e "${R}${L}you are not using${N} ${B}Arch${N} ${R}Linux.This script is only for${N} ${B}arch${N} ${R}based distributions${N}"
exit 1  
fi

# check for internet connection
ping -c 1 google.com &>/dev/null
if [ $? -eq 0 ];then
    echo -e  "${G}${L} [+] Internet connected ${N}"
sleep 2s
clear
else   
    echo -e "${G}${L}[-] Internet not connected ${N}"
exit 1
fi

# branding
echo -e "${B}${L}Arch to hack script by ${G}${L}talha${N}" 
echo -e "This script is going to convert ${B}${L}Arch${N} linux into ${R}${L}hacking os${N}"
echo "${G}${L}[+] Starting process  ......${N}"
sleep 3s

################### magic start from here #######################
# update Arch repo
echo -e "${G}${L}[+]${N} Updating ${B}${L}Arch repo${N}"
  sudo pacman -Sy

# dependencies for black arch repo
echo -e "${G}${L}[+]${N} ${B}${L}checking dependices${N}"
sleep 2s

# check curl
if which curl &>/dev/null; then 
echo -e "${G}${L}[+]${N} ${B}${L}curl found${N}"
else 
     echo -e "${G}${L}[-]${N} ${B}${L}curl not found${N}"
     echo -e "${G}${L}[+]${N} ${B}${L}Installing${N}"
    sudo pacman -S curl --noconfirm
echo -e "${G}${L}[+]${N} ${G}${L}Installed succesfully{N}"
fi

# add black arch repo
echo -e "${G}${L}[+]${N} ${G}${L}Installing black arch keyring${N}"
curl -O https://blackarch.org/strap.sh
echo 5ea40d49ecd14c2e024deecf90605426db97ea0c strap.sh | sha1sum -c
chmod +x strap.sh
sudo ./strap.sh
sudo pacman -Syu --noconfirm
echo -e "${G}${L}[+]${N} ${G}${L}Black arch repo installed succesfully${N}"
echo -e "${G}${L}[+]${N} ${G}${L}Process 1/3 completed succesfully${N}"
sleep 9s
clear

# options
echo -e "${G}${L}[+]${N} ${G}${L}Started process 2/3 ....${N}"
sleep 1s
echo -e "${G}${L}what do you want to install?${N}"
echo -e "${G}${L}[+]${N} ${B}${L}[1] Desktop + basic apps + hacking tools${N}"
echo "It will install lxde desktop and hacking tools.Recommended for arch minimal installation"
echo -e "${G}${L}[+]${N} ${B}${L}[2] hacking tools only${N}"
read -p "Enter your choice 1/2:" choice
case $choice in 
     1)
echo "${L}${B}Choice is 1${N}"
sleep 2s
clear
# install drivers
echo "${L}${G}[+]${N} ${B}${L}Installing Drivers${N}"
sleep 2s
drivers_file="drivers.txt"
while read -r drivers
do 
 # Check if the line starts with a '#' (comment)
  if [[ $drivers =~ ^# ]]; then
    continue  # Skip lines starting with #
  fi
  sudo pacman -S $drivers --noconfirm
   echo "${L}${G}$drivers Installed${N}"
done < $drivers_file
      echo "${L}${G}[+]${N} ${B}${L}Installing Drivers completed${N}"
      sleep 2s
      clear

# install desktop
  echo "${L}${G}[+]${N} ${B}${L}Installing Desktop apps${N}"
  sleep 2s
pkgs_file="desktop_packages.txt"
while read -r pkgs
do
  # Check if the line starts with a '#' (comment)
  if [[ $pkgs =~ ^# ]]; then
    continue  # Skip lines starting with #
  fi
  sudo pacman -S $pkgs --noconfirm
  echo "${L}${G}$pkgs Installed${N}"
done < $pkgs_file

# Enable services
sudo systemctl enable lxdm
sudo systemctl enable NetworkManager.service

     echo "${L}${G}[+]${N} ${B}${L}Installing Desktop completed${N}"
      sleep 2s
      clear
# install hacking tools
tools_file="hacking_tools"
while read -r tools
do
 # Check if the line starts with a '#' (comment)
  if [[ $tools =~ ^# ]]; then
    continue  # Skip lines starting with #
  fi
  sudo pacman -S $tools --noconfirm
  echo "${L}${G}$tools Installed${N}"
done < $tools_file
echo "${L}${G}All Done${N}"
sleep 3s

# start options for choice one
chmod +x options
sudo ./options
    ;;

     2) 
     echo "you chosed option 2"
     sleep 2s
# install hacking tools
tools_file="hacking_tools"
while read -r tools
do
 # Check if the line starts with a '#' (comment)
  if [[ $tools =~ ^# ]]; then
    continue  # Skip lines starting with #
  fi
  sudo pacman -S $tools --noconfirm
  echo "${L}${G}$tools Installed${N}"
done < $tools_file
echo "${L}${G}All Done${N}"
sleep 3s

     ;;
esac


# config apache2 webserver
echo "${L}${B}configuring apache2 webserver${N}"
sudo sed -i '132c\LoadModule unique_id_module modules/mod_unique_id.so' /etc/httpd/conf/httpd.conf &>/dev/null
echo "${L}${B}All Done${N}"
echo "${L}${G}Thanks for using this script.you can reboot your pc${N}"



